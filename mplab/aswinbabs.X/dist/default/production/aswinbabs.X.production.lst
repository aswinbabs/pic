

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue May 07 16:30:34 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4580 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _INT0IF	set	32657
    54   000000                     _INT0IE	set	32660
    55   000000                     _PEIE	set	32662
    56   000000                     _PORTC	set	3970
    57   000000                     _PORTD	set	3971
    58   000000                     _TRISB	set	3987
    59   000000                     _TRISC	set	3988
    60   000000                     _ADCON1	set	4033
    61   000000                     _TRISD	set	3989
    62   000000                     _GIE	set	32663
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67   00015E                     __pcinit:
    68                           	callstack 0
    69   00015E                     start_initialization:
    70                           	callstack 0
    71   00015E                     __initialization:
    72                           	callstack 0
    73   00015E                     end_of_initialization:
    74                           	callstack 0
    75   00015E                     __end_of__initialization:
    76                           	callstack 0
    77   00015E  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    78   000160  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    79   000162  0100               	movlb	0
    80   000164  EF09  F000         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMRAM
    83   000001                     __pcstackCOMRAM:
    84                           	callstack 0
    85   000001                     i2delay@i:
    86                           	callstack 0
    87                           
    88                           ; 2 bytes @ 0x0
    89   000001                     	ds	2
    90   000003                     i2delay@j:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x2
    94   000003                     	ds	2
    95   000005                     __isr@i:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x4
    99   000005                     	ds	2
   100   000007                     delay@i:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x6
   104   000007                     	ds	2
   105   000009                     delay@j:
   106                           	callstack 0
   107                           
   108                           ; 2 bytes @ 0x8
   109   000009                     	ds	2
   110   00000B                     
   111                           ; 1 bytes @ 0xA
   112 ;;
   113 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   114 ;;
   115 ;; *************** function _main *****************
   116 ;; Defined at:
   117 ;;		line 16 in file "interrupt.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;		None
   122 ;; Return value:  Size  Location     Type
   123 ;;                  1    wreg      void 
   124 ;; Registers used:
   125 ;;		wreg, status,2, status,0, cstack
   126 ;; Tracked objects:
   127 ;;		On entry : 0/0
   128 ;;		On exit  : 0/0
   129 ;;		Unchanged: 0/0
   130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   131 ;;      Params:         0       0       0       0       0       0       0
   132 ;;      Locals:         0       0       0       0       0       0       0
   133 ;;      Temps:          0       0       0       0       0       0       0
   134 ;;      Totals:         0       0       0       0       0       0       0
   135 ;;Total ram usage:        0 bytes
   136 ;; Hardware stack levels required when called: 3
   137 ;; This function calls:
   138 ;;		_delay
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145   000012                     __ptext0:
   146                           	callstack 0
   147   000012                     _main:
   148                           	callstack 28
   149   000012                     
   150                           ;interrupt.c: 17: TRISC=0X00;
   151   000012  0E00               	movlw	0
   152   000014  6E94               	movwf	148,c	;volatile
   153                           
   154                           ;interrupt.c: 18: TRISD=0X00;
   155   000016  0E00               	movlw	0
   156   000018  6E95               	movwf	149,c	;volatile
   157   00001A                     
   158                           ;interrupt.c: 19: TRISB=0XFF;
   159   00001A  6893               	setf	147,c	;volatile
   160                           
   161                           ;interrupt.c: 20: ADCON1=0X0F;
   162   00001C  0E0F               	movlw	15
   163   00001E  6EC1               	movwf	193,c	;volatile
   164   000020                     
   165                           ;interrupt.c: 21: GIE=1;
   166   000020  8EF2               	bsf	4082,7,c	;volatile
   167   000022                     
   168                           ;interrupt.c: 22: PEIE=1;
   169   000022  8CF2               	bsf	4082,6,c	;volatile
   170   000024                     
   171                           ;interrupt.c: 23: INT0IE=1;
   172   000024  88F2               	bsf	4082,4,c	;volatile
   173   000026                     l32:
   174                           
   175                           ;interrupt.c: 28: PORTD=0X00;
   176   000026  0E00               	movlw	0
   177   000028  6E83               	movwf	131,c	;volatile
   178   00002A                     
   179                           ;interrupt.c: 29: delay();
   180   00002A  EC3B  F000         	call	_delay	;wreg free
   181   00002E                     
   182                           ;interrupt.c: 30: PORTD=0X01;
   183   00002E  0E01               	movlw	1
   184   000030  6E83               	movwf	131,c	;volatile
   185                           
   186                           ;interrupt.c: 31: delay();
   187   000032  EC3B  F000         	call	_delay	;wreg free
   188   000036                     
   189                           ;interrupt.c: 32: PORTD=0X02;
   190   000036  0E02               	movlw	2
   191   000038  6E83               	movwf	131,c	;volatile
   192   00003A                     
   193                           ;interrupt.c: 33: delay();
   194   00003A  EC3B  F000         	call	_delay	;wreg free
   195                           
   196                           ;interrupt.c: 34: PORTD=0X04;
   197   00003E  0E04               	movlw	4
   198   000040  6E83               	movwf	131,c	;volatile
   199   000042                     
   200                           ;interrupt.c: 35: delay();
   201   000042  EC3B  F000         	call	_delay	;wreg free
   202   000046                     
   203                           ;interrupt.c: 36: PORTD=0X08;
   204   000046  0E08               	movlw	8
   205   000048  6E83               	movwf	131,c	;volatile
   206                           
   207                           ;interrupt.c: 37: delay();
   208   00004A  EC3B  F000         	call	_delay	;wreg free
   209   00004E                     
   210                           ;interrupt.c: 38: PORTD=0X10;
   211   00004E  0E10               	movlw	16
   212   000050  6E83               	movwf	131,c	;volatile
   213   000052                     
   214                           ;interrupt.c: 39: delay();
   215   000052  EC3B  F000         	call	_delay	;wreg free
   216                           
   217                           ;interrupt.c: 40: PORTD=0X20;
   218   000056  0E20               	movlw	32
   219   000058  6E83               	movwf	131,c	;volatile
   220   00005A                     
   221                           ;interrupt.c: 41: delay();
   222   00005A  EC3B  F000         	call	_delay	;wreg free
   223   00005E                     
   224                           ;interrupt.c: 42: PORTD=0X40;
   225   00005E  0E40               	movlw	64
   226   000060  6E83               	movwf	131,c	;volatile
   227                           
   228                           ;interrupt.c: 43: delay();
   229   000062  EC3B  F000         	call	_delay	;wreg free
   230   000066                     
   231                           ;interrupt.c: 44: PORTD=0X80;
   232   000066  0E80               	movlw	128
   233   000068  6E83               	movwf	131,c	;volatile
   234   00006A                     
   235                           ;interrupt.c: 45: delay();
   236   00006A  EC3B  F000         	call	_delay	;wreg free
   237   00006E  EF13  F000         	goto	l32
   238   000072  EF07  F000         	goto	start
   239   000076                     __end_of_main:
   240                           	callstack 0
   241                           
   242 ;; *************** function _delay *****************
   243 ;; Defined at:
   244 ;;		line 10 in file "interrupt.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  j               2    8[COMRAM] int 
   249 ;;  i               2    6[COMRAM] int 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  2   22[None  ] int 
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   259 ;;      Params:         0       0       0       0       0       0       0
   260 ;;      Locals:         4       0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0
   262 ;;      Totals:         4       0       0       0       0       0       0
   263 ;;Total ram usage:        4 bytes
   264 ;; Hardware stack levels used: 1
   265 ;; Hardware stack levels required when called: 2
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text1
   274   000076                     __ptext1:
   275                           	callstack 0
   276   000076                     _delay:
   277                           	callstack 28
   278   000076                     
   279                           ;interrupt.c: 11: int i,j;;interrupt.c: 12: for(i=0;i<300;i++){
   280   000076  0E00               	movlw	0
   281   000078  6E08               	movwf	(delay@i+1)^0,c
   282   00007A  0E00               	movlw	0
   283   00007C  6E07               	movwf	delay@i^0,c
   284   00007E                     l797:
   285                           
   286                           ;interrupt.c: 13: for(j=0;j<300;j++);
   287   00007E  0E00               	movlw	0
   288   000080  6E0A               	movwf	(delay@j+1)^0,c
   289   000082  0E00               	movlw	0
   290   000084  6E09               	movwf	delay@j^0,c
   291   000086                     l803:
   292   000086  4A09               	infsnz	delay@j^0,f,c
   293   000088  2A0A               	incf	(delay@j+1)^0,f,c
   294   00008A  BE0A               	btfsc	(delay@j+1)^0,7,c
   295   00008C  EF51  F000         	goto	u11
   296   000090  0E2C               	movlw	44
   297   000092  5C09               	subwf	delay@j^0,w,c
   298   000094  0E01               	movlw	1
   299   000096  580A               	subwfb	(delay@j+1)^0,w,c
   300   000098  A0D8               	btfss	status,0,c
   301   00009A  EF51  F000         	goto	u11
   302   00009E  EF53  F000         	goto	u10
   303   0000A2                     u11:
   304   0000A2  EF43  F000         	goto	l803
   305   0000A6                     u10:
   306   0000A6  4A07               	infsnz	delay@i^0,f,c
   307   0000A8  2A08               	incf	(delay@i+1)^0,f,c
   308   0000AA  BE08               	btfsc	(delay@i+1)^0,7,c
   309   0000AC  EF61  F000         	goto	u21
   310   0000B0  0E2C               	movlw	44
   311   0000B2  5C07               	subwf	delay@i^0,w,c
   312   0000B4  0E01               	movlw	1
   313   0000B6  5808               	subwfb	(delay@i+1)^0,w,c
   314   0000B8  A0D8               	btfss	status,0,c
   315   0000BA  EF61  F000         	goto	u21
   316   0000BE  EF63  F000         	goto	u20
   317   0000C2                     u21:
   318   0000C2  EF3F  F000         	goto	l797
   319   0000C6                     u20:
   320   0000C6  0012               	return		;funcret
   321   0000C8                     __end_of_delay:
   322                           	callstack 0
   323                           
   324 ;; *************** function __isr *****************
   325 ;; Defined at:
   326 ;;		line 50 in file "interrupt.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  i               2    4[COMRAM] int 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         0       0       0       0       0       0       0
   341 ;;      Locals:         2       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0
   343 ;;      Totals:         2       0       0       0       0       0       0
   344 ;;Total ram usage:        2 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; Hardware stack levels required when called: 1
   347 ;; This function calls:
   348 ;;		i2_delay
   349 ;; This function is called by:
   350 ;;		Interrupt level 2
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	intcode
   355   000008                     __pintcode:
   356                           	callstack 0
   357   000008                     __isr:
   358                           	callstack 28
   359                           
   360                           ;incstack = 0
   361   000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   362   00000A  ED8D  F000         	call	int_func,f	;refresh shadow registers
   363                           
   364                           	psect	intcode_body
   365   00011A                     __pintcode_body:
   366                           	callstack 28
   367   00011A                     int_func:
   368                           	callstack 28
   369   00011A  0006               	pop		; remove dummy address from shadow register refresh
   370   00011C                     
   371                           ;interrupt.c: 51: int i;;interrupt.c: 52: if(INT0IF==1){
   372   00011C  A2F2               	btfss	4082,1,c	;volatile
   373   00011E  EF93  F000         	goto	i2u5_41
   374   000122  EF95  F000         	goto	i2u5_40
   375   000126                     i2u5_41:
   376   000126  EFAD  F000         	goto	i2l43
   377   00012A                     i2u5_40:
   378   00012A                     
   379                           ;interrupt.c: 53: for(i=0;i<20;i++){
   380   00012A  0E00               	movlw	0
   381   00012C  6E06               	movwf	(__isr@i+1)^0,c
   382   00012E  0E00               	movlw	0
   383   000130  6E05               	movwf	__isr@i^0,c
   384   000132                     i2l873:
   385                           
   386                           ;interrupt.c: 54: PORTC=~PORTC;
   387   000132  1E82               	comf	130,f,c	;volatile
   388   000134                     
   389                           ;interrupt.c: 55: delay();
   390   000134  EC64  F000         	call	i2_delay	;wreg free
   391   000138  4A05               	infsnz	__isr@i^0,f,c
   392   00013A  2A06               	incf	(__isr@i+1)^0,f,c
   393   00013C  BE06               	btfsc	(__isr@i+1)^0,7,c
   394   00013E  EFAA  F000         	goto	i2u6_41
   395   000142  5006               	movf	(__isr@i+1)^0,w,c
   396   000144  E109               	bnz	i2u6_40
   397   000146  0E14               	movlw	20
   398   000148  5C05               	subwf	__isr@i^0,w,c
   399   00014A  A0D8               	btfss	status,0,c
   400   00014C  EFAA  F000         	goto	i2u6_41
   401   000150  EFAC  F000         	goto	i2u6_40
   402   000154                     i2u6_41:
   403   000154  EF99  F000         	goto	i2l873
   404   000158                     i2u6_40:
   405   000158                     
   406                           ;interrupt.c: 56: };interrupt.c: 58: INT0IF=0;
   407   000158  92F2               	bcf	4082,1,c	;volatile
   408   00015A                     i2l43:
   409   00015A  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   410   00015C  0011               	retfie		f
   411   00015E                     __end_of__isr:
   412                           	callstack 0
   413                           
   414 ;; *************** function i2_delay *****************
   415 ;; Defined at:
   416 ;;		line 10 in file "interrupt.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  j               2    2[COMRAM] int 
   421 ;;  i               2    0[COMRAM] int 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  2    0[None  ] int 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   431 ;;      Params:         0       0       0       0       0       0       0
   432 ;;      Locals:         4       0       0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0
   434 ;;      Totals:         4       0       0       0       0       0       0
   435 ;;Total ram usage:        4 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		__isr
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text3
   445   0000C8                     __ptext3:
   446                           	callstack 0
   447   0000C8                     i2_delay:
   448                           	callstack 28
   449   0000C8                     
   450                           ;interrupt.c: 11: int i,j;;interrupt.c: 12: for(i=0;i<300;i++){
   451   0000C8  0E00               	movlw	0
   452   0000CA  6E02               	movwf	(i2delay@i+1)^0,c
   453   0000CC  0E00               	movlw	0
   454   0000CE  6E01               	movwf	i2delay@i^0,c
   455   0000D0                     i2l817:
   456                           
   457                           ;interrupt.c: 13: for(j=0;j<300;j++);
   458   0000D0  0E00               	movlw	0
   459   0000D2  6E04               	movwf	(i2delay@j+1)^0,c
   460   0000D4  0E00               	movlw	0
   461   0000D6  6E03               	movwf	i2delay@j^0,c
   462   0000D8                     i2l823:
   463   0000D8  4A03               	infsnz	i2delay@j^0,f,c
   464   0000DA  2A04               	incf	(i2delay@j+1)^0,f,c
   465   0000DC  BE04               	btfsc	(i2delay@j+1)^0,7,c
   466   0000DE  EF7A  F000         	goto	i2u3_41
   467   0000E2  0E2C               	movlw	44
   468   0000E4  5C03               	subwf	i2delay@j^0,w,c
   469   0000E6  0E01               	movlw	1
   470   0000E8  5804               	subwfb	(i2delay@j+1)^0,w,c
   471   0000EA  A0D8               	btfss	status,0,c
   472   0000EC  EF7A  F000         	goto	i2u3_41
   473   0000F0  EF7C  F000         	goto	i2u3_40
   474   0000F4                     i2u3_41:
   475   0000F4  EF6C  F000         	goto	i2l823
   476   0000F8                     i2u3_40:
   477   0000F8  4A01               	infsnz	i2delay@i^0,f,c
   478   0000FA  2A02               	incf	(i2delay@i+1)^0,f,c
   479   0000FC  BE02               	btfsc	(i2delay@i+1)^0,7,c
   480   0000FE  EF8A  F000         	goto	i2u4_41
   481   000102  0E2C               	movlw	44
   482   000104  5C01               	subwf	i2delay@i^0,w,c
   483   000106  0E01               	movlw	1
   484   000108  5802               	subwfb	(i2delay@i+1)^0,w,c
   485   00010A  A0D8               	btfss	status,0,c
   486   00010C  EF8A  F000         	goto	i2u4_41
   487   000110  EF8C  F000         	goto	i2u4_40
   488   000114                     i2u4_41:
   489   000114  EF68  F000         	goto	i2l817
   490   000118                     i2u4_40:
   491   000118  0012               	return		;funcret
   492   00011A                     __end_ofi2_delay:
   493                           	callstack 0
   494   000000                     
   495                           	psect	rparam
   496   000000                     
   497                           	psect	temp
   498   00000B                     btemp:
   499                           	callstack 0
   500   00000B                     	ds	1
   501   000000                     int$flags	set	btemp
   502   000000                     wtemp8	set	btemp+1
   503   000000                     ttemp5	set	btemp+1
   504   000000                     ttemp6	set	btemp+4
   505   000000                     ttemp7	set	btemp+8
   506                           
   507                           	psect	idloc
   508                           
   509                           ;Config register IDLOC0 @ 0x200000
   510                           ;	unspecified, using default values
   511   200000                     	org	2097152
   512   200000  FF                 	db	255
   513                           
   514                           ;Config register IDLOC1 @ 0x200001
   515                           ;	unspecified, using default values
   516   200001                     	org	2097153
   517   200001  FF                 	db	255
   518                           
   519                           ;Config register IDLOC2 @ 0x200002
   520                           ;	unspecified, using default values
   521   200002                     	org	2097154
   522   200002  FF                 	db	255
   523                           
   524                           ;Config register IDLOC3 @ 0x200003
   525                           ;	unspecified, using default values
   526   200003                     	org	2097155
   527   200003  FF                 	db	255
   528                           
   529                           ;Config register IDLOC4 @ 0x200004
   530                           ;	unspecified, using default values
   531   200004                     	org	2097156
   532   200004  FF                 	db	255
   533                           
   534                           ;Config register IDLOC5 @ 0x200005
   535                           ;	unspecified, using default values
   536   200005                     	org	2097157
   537   200005  FF                 	db	255
   538                           
   539                           ;Config register IDLOC6 @ 0x200006
   540                           ;	unspecified, using default values
   541   200006                     	org	2097158
   542   200006  FF                 	db	255
   543                           
   544                           ;Config register IDLOC7 @ 0x200007
   545                           ;	unspecified, using default values
   546   200007                     	org	2097159
   547   200007  FF                 	db	255
   548                           
   549                           	psect	config
   550                           
   551                           ; Padding undefined space
   552   300000                     	org	3145728
   553   300000  FF                 	db	255
   554                           
   555                           ;Config register CONFIG1H @ 0x300001
   556                           ;	unspecified, using default values
   557                           ;	Oscillator Selection bits
   558                           ;	OSC = 0x7, unprogrammed default
   559                           ;	Fail-Safe Clock Monitor Enable bit
   560                           ;	FCMEN = 0x0, unprogrammed default
   561                           ;	Internal/External Oscillator Switchover bit
   562                           ;	IESO = 0x0, unprogrammed default
   563   300001                     	org	3145729
   564   300001  07                 	db	7
   565                           
   566                           ;Config register CONFIG2L @ 0x300002
   567                           ;	unspecified, using default values
   568                           ;	Power-up Timer Enable bit
   569                           ;	PWRT = 0x1, unprogrammed default
   570                           ;	Brown-out Reset Enable bits
   571                           ;	BOREN = 0x3, unprogrammed default
   572                           ;	Brown-out Reset Voltage bits
   573                           ;	BORV = 0x3, unprogrammed default
   574   300002                     	org	3145730
   575   300002  1F                 	db	31
   576                           
   577                           ;Config register CONFIG2H @ 0x300003
   578                           ;	unspecified, using default values
   579                           ;	Watchdog Timer Enable bit
   580                           ;	WDT = 0x1, unprogrammed default
   581                           ;	Watchdog Timer Postscale Select bits
   582                           ;	WDTPS = 0xF, unprogrammed default
   583   300003                     	org	3145731
   584   300003  1F                 	db	31
   585                           
   586                           ; Padding undefined space
   587   300004                     	org	3145732
   588   300004  FF                 	db	255
   589                           
   590                           ;Config register CONFIG3H @ 0x300005
   591                           ;	unspecified, using default values
   592                           ;	PORTB A/D Enable bit
   593                           ;	PBADEN = 0x1, unprogrammed default
   594                           ;	Low-Power Timer 1 Oscillator Enable bit
   595                           ;	LPT1OSC = 0x0, unprogrammed default
   596                           ;	MCLR Pin Enable bit
   597                           ;	MCLRE = 0x1, unprogrammed default
   598   300005                     	org	3145733
   599   300005  82                 	db	130
   600                           
   601                           ;Config register CONFIG4L @ 0x300006
   602                           ;	unspecified, using default values
   603                           ;	Stack Full/Underflow Reset Enable bit
   604                           ;	STVREN = 0x1, unprogrammed default
   605                           ;	Single-Supply ICSP Enable bit
   606                           ;	LVP = 0x1, unprogrammed default
   607                           ;	Boot Block Size Select bit
   608                           ;	BBSIZ = 0x0, unprogrammed default
   609                           ;	Extended Instruction Set Enable bit
   610                           ;	XINST = 0x0, unprogrammed default
   611                           ;	Background Debugger Enable bit
   612                           ;	DEBUG = 0x1, unprogrammed default
   613   300006                     	org	3145734
   614   300006  85                 	db	133
   615                           
   616                           ; Padding undefined space
   617   300007                     	org	3145735
   618   300007  FF                 	db	255
   619                           
   620                           ;Config register CONFIG5L @ 0x300008
   621                           ;	unspecified, using default values
   622                           ;	Code Protection bit
   623                           ;	CP0 = 0x1, unprogrammed default
   624                           ;	Code Protection bit
   625                           ;	CP1 = 0x1, unprogrammed default
   626                           ;	Code Protection bit
   627                           ;	CP2 = 0x1, unprogrammed default
   628                           ;	Code Protection bit
   629                           ;	CP3 = 0x1, unprogrammed default
   630   300008                     	org	3145736
   631   300008  0F                 	db	15
   632                           
   633                           ;Config register CONFIG5H @ 0x300009
   634                           ;	unspecified, using default values
   635                           ;	Boot Block Code Protection bit
   636                           ;	CPB = 0x1, unprogrammed default
   637                           ;	Data EEPROM Code Protection bit
   638                           ;	CPD = 0x1, unprogrammed default
   639   300009                     	org	3145737
   640   300009  C0                 	db	192
   641                           
   642                           ;Config register CONFIG6L @ 0x30000A
   643                           ;	unspecified, using default values
   644                           ;	Write Protection bit
   645                           ;	WRT0 = 0x1, unprogrammed default
   646                           ;	Write Protection bit
   647                           ;	WRT1 = 0x1, unprogrammed default
   648                           ;	Write Protection bit
   649                           ;	WRT2 = 0x1, unprogrammed default
   650                           ;	Write Protection bit
   651                           ;	WRT3 = 0x1, unprogrammed default
   652   30000A                     	org	3145738
   653   30000A  0F                 	db	15
   654                           
   655                           ;Config register CONFIG6H @ 0x30000B
   656                           ;	unspecified, using default values
   657                           ;	Configuration Register Write Protection bit
   658                           ;	WRTC = 0x1, unprogrammed default
   659                           ;	Boot Block Write Protection bit
   660                           ;	WRTB = 0x1, unprogrammed default
   661                           ;	Data EEPROM Write Protection bit
   662                           ;	WRTD = 0x1, unprogrammed default
   663   30000B                     	org	3145739
   664   30000B  E0                 	db	224
   665                           
   666                           ;Config register CONFIG7L @ 0x30000C
   667                           ;	unspecified, using default values
   668                           ;	Table Read Protection bit
   669                           ;	EBTR0 = 0x1, unprogrammed default
   670                           ;	Table Read Protection bit
   671                           ;	EBTR1 = 0x1, unprogrammed default
   672                           ;	Table Read Protection bit
   673                           ;	EBTR2 = 0x1, unprogrammed default
   674                           ;	Table Read Protection bit
   675                           ;	EBTR3 = 0x1, unprogrammed default
   676   30000C                     	org	3145740
   677   30000C  0F                 	db	15
   678                           
   679                           ;Config register CONFIG7H @ 0x30000D
   680                           ;	unspecified, using default values
   681                           ;	Boot Block Table Read Protection bit
   682                           ;	EBTRB = 0x1, unprogrammed default
   683   30000D                     	org	3145741
   684   30000D  40                 	db	64
   685                           tosu	equ	0xFFF
   686                           tosh	equ	0xFFE
   687                           tosl	equ	0xFFD
   688                           stkptr	equ	0xFFC
   689                           pclatu	equ	0xFFB
   690                           pclath	equ	0xFFA
   691                           pcl	equ	0xFF9
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           prodh	equ	0xFF4
   697                           prodl	equ	0xFF3
   698                           indf0	equ	0xFEF
   699                           postinc0	equ	0xFEE
   700                           postdec0	equ	0xFED
   701                           preinc0	equ	0xFEC
   702                           plusw0	equ	0xFEB
   703                           fsr0h	equ	0xFEA
   704                           fsr0l	equ	0xFE9
   705                           wreg	equ	0xFE8
   706                           indf1	equ	0xFE7
   707                           postinc1	equ	0xFE6
   708                           postdec1	equ	0xFE5
   709                           preinc1	equ	0xFE4
   710                           plusw1	equ	0xFE3
   711                           fsr1h	equ	0xFE2
   712                           fsr1l	equ	0xFE1
   713                           bsr	equ	0xFE0
   714                           indf2	equ	0xFDF
   715                           postinc2	equ	0xFDE
   716                           postdec2	equ	0xFDD
   717                           preinc2	equ	0xFDC
   718                           plusw2	equ	0xFDB
   719                           fsr2h	equ	0xFDA
   720                           fsr2l	equ	0xFD9
   721                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under __isr in COMRAM

    __isr->i2_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under __isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under __isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      60
                                              6 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) __isr                                                 2     2      0      90
                                              4 COMRAM     2     2      0
                            i2_delay
 ---------------------------------------------------------------------------------
 (3) i2_delay                                              4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 __isr (ROOT)
   i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      A       A       1       10.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhhl        30      0       0      17        0.0%
BITBIGSFRhl         2B      0       0      18        0.0%
BITBIGSFRlh          F      0       0      19        0.0%
BITBIGSFRll        282      0       0      20        0.0%
ABS                  0      0       0      21        0.0%
BIGRAM             5FF      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue May 07 16:30:34 2024

                     l32 0026                       l27 00C6                       u10 00A6  
                     u11 00A2                       u20 00C6                       u21 00C2  
                    l803 0086                      l805 008A                      l807 00A6  
                    l831 0012                      l809 00AA                      l841 002A  
                    l833 001A                      l851 0046                      l843 002E  
                    l835 0020                      l861 0066                      l853 004E  
                    l845 0036                      l837 0022                      l791 0076  
                    l863 006A                      l855 0052                      l847 003A  
                    l839 0024                      l857 005A                      l849 0042  
                    l859 005E                      l797 007E                      _GIE 007F97  
                   _PEIE 007F96                     i2l42 0158                     i2l27 0118  
                   i2l43 015A                     __isr 0008                     _main 0012  
                   btemp 000B          __end_ofi2_delay 011A                     start 000E  
           ___param_bank 000000                    ?__isr 0001                    ?_main 0001  
                  i2l811 00C8                    i2l823 00D8                    i2l825 00DC  
                  i2l817 00D0                    i2l827 00F8                    i2l829 00FC  
                  i2l873 0132                    i2l865 011C                    i2l875 0134  
                  i2l867 012A                    i2l877 0138                    i2l879 013C  
                  _PORTC 000F82                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _delay 0076  
                  ttemp5 000C                    ttemp6 000F                    ttemp7 0013  
                  status 000FD8                    wtemp8 000C          __initialization 015E  
           __end_of__isr 015E             __end_of_main 0076                   ??__isr 0005  
                 ??_main 000B            __activetblptr 000000                   ?_delay 0001  
                 _ADCON1 000FC1                ??i2_delay 0001                   _INT0IE 007F94  
                 _INT0IF 007F91                   i2u3_40 00F8                   i2u3_41 00F4  
                 i2u4_40 0118                   i2u4_41 0114                   i2u5_40 012A  
                 i2u5_41 0126                   i2u6_40 0158                   i2u6_41 0154  
                 __isr@i 0005                   delay@i 0007                   delay@j 0009  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 015E  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_delay 00C8  
                ??_delay 0007                  i2_delay 00C8                  __Hparam 0000  
                __Lparam 0000                  __pcinit 015E                  __ramtop 0600  
                __ptext0 0012                  __ptext1 0076                  __ptext3 00C8  
         __pintcode_body 011A     end_of_initialization 015E                  int_func 011A  
    start_initialization 015E                 ?i2_delay 0001                __pintcode 0008  
               i2delay@i 0001                 i2delay@j 0003                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 000B  
               intlevel2 0000  
